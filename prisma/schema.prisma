generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bac {
  an                     Int
  cod_candidat           String
  sex                    String?
  specializare           String
  promotie_anterioara    Boolean
  unitate_siiir          String?
  unitate_nume           String?
  unitate_cod_judet      String?
  clasa                  String?
  lr_init                Decimal? @db.Decimal
  lr_cont                Decimal? @db.Decimal
  lr_final               Decimal? @db.Decimal
  limba_materna          String?
  lm_init                Decimal? @db.Decimal
  lm_cont                Decimal? @db.Decimal
  lm_final               Decimal? @db.Decimal
  disciplina_obligatorie String
  do_init                Decimal? @db.Decimal
  do_cont                Decimal? @db.Decimal
  do_final               Decimal? @db.Decimal
  disciplina_alegere     String
  da_init                Decimal? @db.Decimal
  da_cont                Decimal? @db.Decimal
  da_final               Decimal? @db.Decimal
  limba_moderna          String
  medie                  Decimal? @db.Decimal
  rezultat               String

  @@id([an, cod_candidat], map: "bac_pkey_0")
}

model en {
  an                      Int
  cod_candidat            String
  sex                     String?
  unitate_siiir           String?
  unitate_nume            String?
  unitate_cod_judet       String?
  lr_init                 Decimal? @db.Decimal
  lr_cont                 Decimal? @db.Decimal
  lr_final                Decimal? @db.Decimal
  limba_materna           String?
  lm_init                 Decimal? @db.Decimal
  lm_cont                 Decimal? @db.Decimal
  lm_final                Decimal? @db.Decimal
  ma_init                 Decimal? @db.Decimal
  ma_cont                 Decimal? @db.Decimal
  ma_final                Decimal? @db.Decimal
  medie_en                Decimal? @db.Decimal
  medie_abs               Decimal? @db.Decimal
  medie_adm               Decimal? @db.Decimal
  repartizat_liceu_nume   String?
  repartizat_specializare String?
  repartizat_liceu_siiir  String?
  repartizat_cod_judet    String?

  @@id([an, cod_candidat], map: "en_pkey_0")
}

model users {
  id       String @id
  email    String
  password String
  name     String
}

model institutii {
  id_legacy    String?
  nume         String
  adresa       String?
  website      String?
  email        String?
  telefon      String?
  wikipedia    String?
  facebook     String?
  instagram    String?
  youtube      String?
  cod_siiir    String  @id
  cod_fiscal   String?
  latlong      String?
  last_updated BigInt?
  last_author  String?
  sigla_lipsa  Boolean @default(false)
  sigla_lg     Boolean @default(false)
  sigla_xs     Boolean @default(false)
  cod_judet    String
  sigla        String?
}

model siiir {
  an                      String?
  judet_pj                String?
  localitate_pj           String?
  cod_siruta_pj           String?
  mediu_loc_pj            String?
  cod_siiir_pj            String?
  denumire_pj             String?
  localitate_unitate      String?
  cod_siruta_unitate      String?
  mediu_loc_unitate       String?
  cod_sirues              String?
  cod_siiir_unitate       String    @id(map: "siiir_pkey1")
  denumire_scurta_unitate String?
  denumire_lunga_unitate  String?
  tip_unitate             String?
  statut_unitate          String?
  cod_fiscal              String?
  mod_functionare         String?
  forma_finantare         String?
  forma_proprietate       String?
  strada                  String?
  numar                   String?
  cod_postal              String?
  telefon                 String?
  fax                     String?
  email                   String?
  atribut_website         String?
  data_website            DateTime? @db.Date
  atribut_email           String?
  data_email              DateTime? @db.Date
  numar_niveluri_asociate Int?
  stare_antepre_colar     String?   @map("stare_antepreșcolar")
  data_antepre_colar      DateTime? @map("data_antepreșcolar") @db.Date
  stare_pre_colar         String?   @map("stare_preșcolar")
  data_pre_colar          DateTime? @map("data_preșcolar") @db.Date
  stare_primar            String?
  data_primar             DateTime? @db.Date
  stare_gimnazial         String?
  data_gimnazial          DateTime? @db.Date
  stare_liceal            String?
  data_liceal             DateTime? @db.Date
  stare_postliceal        String?
  data_postliceal         DateTime? @db.Date
  stare_profesional       String?
  data_profesional        DateTime? @db.Date
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model edit_logs {
  id             Int                    @id @default(autoincrement())
  institution_id String
  author_id      String?
  old_value      String?
  new_value      String?
  timestamp      DateTime               @db.Timestamptz(6)
  field_name     institution_field_name
  photo_id       Int?
}

model photos {
  id             Int      @id @default(autoincrement())
  file_name      String
  school_code    String
  source         String?
  created_by     String
  created_date   DateTime @db.Timestamptz(6)
  modified_by    String
  modified_date  DateTime @db.Timestamptz(6)
  width          Int
  height         Int
  order_priority Int

  @@index([school_code])
}

enum institution_field_name {
  sigla
  fara_sigla
  website
  istoric
  facebook
  instagram
  wikipedia
  tiktok
  youtube
  photo
  photo_source
  photo_order_priority
}

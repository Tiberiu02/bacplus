generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model bac {
  an                     Int
  cod_candidat           String
  id_judet               String?
  id_liceu               String?
  sex                    String?
  promotie_anterioara    String
  specializare           String
  lr_init                Float?
  lr_cont                Float?
  lr_final               Float?
  limba_materna          String?
  lm_init                Float?
  lm_cont                Float?
  lm_final               Float?
  limba_moderna          String
  disciplina_obligatorie String
  do_init                Float?
  do_cont                Float?
  do_final               Float?
  disciplina_alegere     String
  da_init                Float?
  da_cont                Float?
  da_final               Float?
  medie                  Float?
  my_medie               Float?
  rezultat               String

  @@id([an, cod_candidat])
}

model en {
  an                      Int
  cod_candidat            String
  id_judet                String
  id_scoala               String
  lr_final                Float?
  ma_final                Float?
  limba_materna           String?
  lm_final                Float?
  medie_en                Float?
  medie_abs               Float?
  medie_adm               Float?
  repartizat_id_liceu     String?
  repartizat_specializare String?

  @@id([an, cod_candidat])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model alias {
  alternativ String @id
  corect     String
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model institutii {
  id         String   @id
  nume       String
  rank       Decimal?
  adresa     String?
  website    String?
  email      String?
  telefon    String?
  wikipedia  String?
  facebook   String?
  instagram  String?
  youtube    String?
  cod_siiir  String?  @unique(map: "sqlite_autoindex_institutii_2")
  cod_fiscal String?
  liceu      String?
  gimnaziu   String?
  latlong    String?
  siiir      siiir?   @relation(fields: [cod_siiir], references: [cod], onDelete: NoAction, onUpdate: NoAction)
}

model siiir {
  cod                   String      @id
  aux_id                String      @unique(map: "index_aux_id")
  denumire              String
  denumire_scurta       String
  localitate            String
  localitate_superioara String
  judet                 String
  statut                String
  tip_unitate           String
  forma_proprietate     String
  strada                String?
  nr_strada             String?
  cod_postal            String?
  website               String?
  telefon               String?
  cod_sirues            String?
  cod_fiscal            String?
  mod_operare           String?
  institutii            institutii?
}

model users {
  id       String @id
  email    String @unique(map: "sqlite_autoindex_users_2")
  password String
}
